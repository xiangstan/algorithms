"""
ALgorithm: Rod Cutting - Top down approach

Initially, we don't know the value of the maximum revenue that can be generated by these lengths, so we will set all the elements of this array to something negative i.e., −∞. We can't initialize all the elements with 0 because the maximum revenue generated by the rod of length 0 is 0, so we will make the r[0] = 0.

In the top down approach, we just start solving the problem naturally, so we will just start checking if the there is already a solution stored in the array or not.
"""

INF = 100000
# generate array with element index 0 to be 0 and -100000 for the rest
r = [0] + [-1 * INF] * 5

def max(x, y):
  if x > y:
    return x
  return y

def TopDown(c, n):
  global r
  if r[n] >= 0 :
    return r[n]

  maximum_revenue = -1 * INF

  for i in range(1, n + 1):
    maximum_revenue = max(maximum_revenue, c[i] + TopDown(c, n - i))

  r[n] = maximum_revenue
  return r[n]

if __name__ == '__main__':
  # list starting from 1, element at index 0 is fake
  c = [0, 10, 24, 30, 40, 45]
  print(r)
  print(TopDown(c, 5))